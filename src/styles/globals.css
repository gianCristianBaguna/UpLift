@import "tailwindcss";
@tailwind utilities;

/* Equivalent of @tailwind base from v3 */
@layer base {
  /*
   * 1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
   * 2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
   */
  *,
  ::before,
  ::after {
    box-sizing: border-box; /* 1 */
    border-width: 0; /* 2 */
    border-style: solid; /* 2 */
    border-color: theme('borderColor.DEFAULT', currentColor); /* 2 */
  }

  /*
   * 1. Use a consistent sensible line-height in all browsers.
   * 2. Prevent adjustments of font size after orientation changes in iOS.
   * 3. Use a more readable tab size.
   * 4. Use the user's configured `sans` font-family by default.
   * 5. Use the user's configured `sans` font-feature-settings by default.
   * 6. Use the user's configured `sans` font-variation-settings by default.
   */
  html {
    line-height: 1.5; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
    -moz-tab-size: 4; /* 3 */
    tab-size: 4; /* 3 */
    font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
    font-feature-settings: normal; /* 5 */
    font-variation-settings: normal; /* 6 */
    -webkit-tap-highlight-color: transparent;
  }

  /*
   * 1. Remove the margin in all browsers.
   * 2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
   */
  body {
    margin: 0; /* 1 */
    line-height: inherit; /* 2 */
  }

  /* Headings */
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  /* Links */
  a {
    color: inherit;
    text-decoration: inherit;
  }

  /* Lists */
  ol, ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  /* Images */
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  /* Forms */
  button, input, optgroup, select, textarea {
    font-family: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    padding: 0;
  }

  button, select {
    text-transform: none;
  }

  button, [type="button"], [type="reset"], [type="submit"] {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
  }

  /* Misc */
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  /* Accessibility */
  :disabled {
    cursor: default;
  }
}

:root {
  --background: #ffffff;
  --foreground: hsl(0, 0%, 100%);
}



/* Custom animations for floating bubbles */
@keyframes float-1 {
  0%,
  100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  25% {
    transform: translateY(-20px) translateX(10px) rotate(90deg);
  }
  50% {
    transform: translateY(-40px) translateX(-5px) rotate(180deg);
  }
  75% {
    transform: translateY(-20px) translateX(-10px) rotate(270deg);
  }
}

@keyframes float-2 {
  0%,
  100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-30px) translateX(15px) rotate(120deg);
  }
  66% {
    transform: translateY(-15px) translateX(-10px) rotate(240deg);
  }
}

@keyframes float-3 {
  0%,
  100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  20% {
    transform: translateY(-25px) translateX(8px) rotate(72deg);
  }
  40% {
    transform: translateY(-35px) translateX(-12px) rotate(144deg);
  }
  60% {
    transform: translateY(-20px) translateX(15px) rotate(216deg);
  }
  80% {
    transform: translateY(-10px) translateX(-8px) rotate(288deg);
  }
}

@keyframes bounce-slow {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-25px);
  }
}

.animate-float-1 {
  animation: float-1 8s ease-in-out infinite;
}

.animate-float-2 {
  animation: float-2 10s ease-in-out infinite;
}

.animate-float-3 {
  animation: float-3 12s ease-in-out infinite;
}

.animate-bounce-slow {
  animation: bounce-slow 6s ease-in-out infinite;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@layer utilities {
  .animate-spin-slow {
    animation: spin 20s linear infinite;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #ffffff;
    --foreground: #ededed;
  }
}

@keyframes waveMotion {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}
@keyframes waveMotionReverse {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(50%);
  }
}

@keyframes soundWave {
  0%,
  100% {
    transform: scaleY(0.3);
  }
  50% {
    transform: scaleY(1);
  }
}

.animate-soundWave {
  animation: soundWave 1.2s ease-in-out infinite;
  transform-origin: bottom;
}

.animate-waveMotion {
  animation: waveMotion 8s linear infinite;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

@keyframes sineWaveMotion {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-25%);
  }
}

.animate-sineWaveMotion {
  animation: sineWaveMotion 4s ease-in-out infinite alternate;
}

.animate-flowWave {
  animation: none; /* SVG animate handles movement */
}

@keyframes blob {
  0%,
  100% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
}

.animate-blob1 {
  animation: blob 18s infinite ease-in-out;
}
.animate-blob2 {
  animation: blob 25s infinite ease-in-out;
}
.animate-blob3 {
  animation: blob 32s infinite ease-in-out;
}
